--Create database
CREATE DATABASE  TaskDb
 
--use created databse
USE TaskDb
--Create Country table define Pk constraint and identity Id
CREATE TABLE COUNTRY 
(
  ID INT PRIMARY KEY IDENTITY(1,1), 
  COUNTRY_NAME NVARCHAR(50),
  CODE NVARCHAR(10)
  )
--Create City table as a same way and add extra countryid foreign key constraint
  CREATE TABLE CITY 
  (
    ID INT PRIMARY KEY IDENTITY(1,1),
    CITY_NAME NVARCHAR(50),
	CODE NVARCHAR(10),
	COUNTRY_ID INT REFERENCES COUNTRY(ID)
	)
--Create District table as a same way
 CREATE TABLE DISTRICT
 (
   ID INT PRIMARY KEY IDENTITY(1,1),
   DISTRICT_NAME NVARCHAR(50),
   COUNTRY_ID INT REFERENCES COUNTRY(ID),
   CITY_ID INT REFERENCES CITY(ID),
   CODE NVARCHAR(10)
 )
--Create Town table as a same way
CREATE TABLE TOWN
 (
   ID INT PRIMARY KEY IDENTITY(1,1),
   TOWN_NAME NVARCHAR(50),
   COUNTRY_ID INT REFERENCES COUNTRY(ID),
   CITY_ID INT REFERENCES CITY(ID),
   DISTRICT_ID INT REFERENCES DISTRICT(ID),
   CODE NVARCHAR(10)
 )
 --Create Stored-Procedure
 CREATE PROC CHECKED_PROC
 @COUNTRY_NAME NVARCHAR(50),
 @COUNTRY_ID INT,
 @CITY_NAME NVARCHAR(50),
 @CITY_ID INT,
 @DISTRICT_NAME NVARCHAR(50),
 @DISTRICT_ID  INT,
 @TOWN_NAME NVARCHAR(50),
 @TOWN_ID INT

 AS
 BEGIN
--------------COUNTRY------------------------
IF(dbo.CHECK_COUNTRY(@COUNTRY_NAME) IS  NULL)
BEGIN
INSERT INTO COUNTRY VALUES(@CITY_NAME,dbo.GENERATE_CODE(@COUNTRY_NAME,@CITY_NAME,@DISTRICT_NAME,@STREET_NAME) )
 SET @COUNTRY_ID=Scope_Identity();
END
ELSE 
PRINT 'Dont insert record becuse already exciting country'
-------------CITY---------------------------
IF(dbo.CHECK_CITY(@CITY_NAME,@COUNTRY_ID) IS  NULL)
BEGIN
 INSERT INTO CITY VALUES(@CITY_NAME,@COUNTRY_ID,'WOCNF1')
 SET @CITY_ID=Scope_Identity();
 END
 ELSE 
 PRINT 'Dont insert record becuse already exciting city'
END
-------------DISTRICT---------------------------
IF(dbo.CHECK_DISTSRICT(@COUNTRY_ID,@CITY_ID,@DISTRICT_NAME) IS  NULL)
BEGIN
 INSERT INTO DISTRICT VALUES(@DISTRICT_NAME,@COUNTRY_ID,@CITY_ID,'SJFG19')
 SET @DISTRICT_ID=Scope_Identity();
 END
 ELSE 
 PRINT 'Dont insert record becuse already exciting district'
END

-------------TOWN---------------------------
IF(dbo.CHECK_TOWN(@TOWN_NAME) IS  NULL)
BEGIN
 INSERT INTO DISTRICT VALUES(@TOWN_NAME,@COUNTRY_ID,@CITY_ID,@DISTRICT_ID,'OWKFT4')
 SET @TOWN_ID=Scope_Identity();
 END
 ELSE 
 PRINT 'Dont insert record becuse already exciting Town'
END

 --Create Function For check country have or not in table
 CREATE FUNCTION CHECK_COUNTRY(@COUNTRY_NAME NVARCHAR(50)) 
 RETURNS NVARCHAR(50)
 BEGIN
 DECLARE @CHECK_COUNTRY NVARCHAR(50)
 SET @CHECK_COUNTRY=(SELECT COUNTRY_NAME 
                    FROM COUNTRY 
                    WHERE COUNTRY_NAME=@COUNTRY_NAME)
 RETURN @CHECK_COUNTRY
 END

 --Create Function for check City have or not in table
 CREATE FUNCTION CHECK_CITY(@COUNTRY_ID INT,@CITY_NAME NVARCHAR(50)) 
 RETURNS NVARCHAR(50)
 BEGIN
 DECLARE @CHECK_CITY NVARCHAR(50)
 SET @CHECK_CITY=(SELECT CITY_NAME 
                    FROM CITY  
					INNER JOIN COUNTRY 
                    ON CITY.COUNTRY_ID=COUNTRY.ID AND COUNTRY.ID=@COUNTRY_ID )
 RETURN @CHECK_CITY
 END

 go
 
 --Create Function for check District have or not in table
 CREATE FUNCTION CHECK_DISTSRICT(@COUNTRY_ID INT,@CITY_ID INT,@DISTSRICT_NAME NVARCHAR(50) )
 RETURNS NVARCHAR(50)
 BEGIN
 DECLARE @CHECK_DISTSRICT NVARCHAR(50)
 SET @CHECK_DISTSRICT=(SELECT DISTRICT.DISTRICT_NAME 
                    FROM DISTRICT  
					INNER JOIN CITY 
					ON CITY.ID=DISTRICT.CITY_ID AND CITY.ID=@CITY_ID
					INNER JOIN COUNTRY 
                    ON CITY.COUNTRY_ID=COUNTRY.ID AND CITY.ID=@CITY_ID)
 RETURN @CHECK_DISTSRICT
 END

  --Create Function for check Town have or not in table
 CREATE FUNCTION CHECK_TOWN(@TOWN_NAME NVARCHAR(50)) 
 RETURNS NVARCHAR(50)
 BEGIN
 DECLARE @CHECK_TOWN NVARCHAR(50)
 SET @CHECK_TOWN=(SELECT @TOWN_NAME 
                    FROM TOWN 
                    WHERE TOWN_NAME=@TOWN_NAME)
 RETURN @CHECK_TOWN
 END
